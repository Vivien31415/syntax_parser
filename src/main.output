Terminals unused in grammar

   T_VOID
   COMMA
   LBRACKET
   RBRACKET


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | if_else
    7          | while
    8          | for
    9          | assignment SEMICOLON
   10          | printf SEMICOLON
   11          | scanf SEMICOLON
   12          | LBRACE statements RBRACE
   13          | RETURN expr SEMICOLON

   14 declaration: type ID ASSIGN expr
   15            | type ID

   16 type: T_INT
   17     | T_CHAR
   18     | T_BOOL
   19     | T_STRING

   20 if_else: IF LPAREN expr RPAREN statement
   21        | IF LPAREN expr RPAREN statement ELSE statement

   22 while: WHILE LPAREN expr RPAREN statement

   23 for: FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement

   24 assignment: ID ASSIGN expr
   25           | ID ADD_ASSI expr
   26           | ID SUB_ASSI expr
   27           | ID MUL_ASSI expr
   28           | ID DIV_ASSI expr
   29           | ID MOD_ASSI expr

   30 printf: PRINTF LPAREN expr RPAREN

   31 scanf: SCANF LPAREN expr RPAREN

   32 expr: BOOL
   33     | ID
   34     | INT
   35     | CHAR
   36     | STRING
   37     | NOT expr
   38     | expr MUL expr
   39     | expr DIV expr
   40     | expr MOD expr
   41     | expr ADD expr
   42     | expr SUB expr
   43     | expr GT expr
   44     | expr LT expr
   45     | expr GE expr
   46     | expr LE expr
   47     | expr EQ expr
   48     | expr NE expr
   49     | expr AND expr
   50     | expr OR expr
   51     | LPAREN expr RPAREN
   52     | ADD expr
   53     | SUB expr


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 16
T_VOID (259)
T_BOOL (260) 18
T_CHAR (261) 17
T_STRING (262) 19
IF (263) 20 21
WHILE (264) 22
FOR (265) 23
PRINTF (266) 30
SCANF (267) 31
RETURN (268) 13
SEMICOLON (269) 4 5 9 10 11 13 23
COMMA (270)
LPAREN (271) 20 21 22 23 30 31 51
RPAREN (272) 20 21 22 23 30 31 51
LBRACE (273) 12
RBRACE (274) 12
LBRACKET (275)
RBRACKET (276)
LOWER_THEN_ELSE (277)
ELSE (278) 21
CHAR (279) 35
INT (280) 34
STRING (281) 36
BOOL (282) 32
ID (283) 14 15 24 25 26 27 28 29 33
ASSIGN (284) 14 24
ADD_ASSI (285) 25
SUB_ASSI (286) 26
MUL_ASSI (287) 27
DIV_ASSI (288) 28
MOD_ASSI (289) 29
OR (290) 50
AND (291) 49
EQ (292) 47
NE (293) 48
GT (294) 43
LT (295) 44
GE (296) 45
LE (297) 46
ADD (298) 41 52
SUB (299) 42 53
MUL (300) 38
DIV (301) 39
MOD (302) 40
NOT (303) 37
UPLUS (304)
UMINUS (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
statements (53)
    on left: 2 3, on right: 1 3 12
statement (54)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3 20 21 22 23
declaration (55)
    on left: 14 15, on right: 5
type (56)
    on left: 16 17 18 19, on right: 14 15
if_else (57)
    on left: 20 21, on right: 6
while (58)
    on left: 22, on right: 7
for (59)
    on left: 23, on right: 8
assignment (60)
    on left: 24 25 26 27 28 29, on right: 9
printf (61)
    on left: 30, on right: 10
scanf (62)
    on left: 31, on right: 11
expr (63)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 53, on right: 13 14 20 21 22 23 24 25 26 27 28 29 30 31
    37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53


State 0

    0 $accept: . program $end

    T_INT      shift, and go to state 1
    T_BOOL     shift, and go to state 2
    T_CHAR     shift, and go to state 3
    T_STRING   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9
    RETURN     shift, and go to state 10
    SEMICOLON  shift, and go to state 11
    LBRACE     shift, and go to state 12
    ID         shift, and go to state 13

    program      go to state 14
    statements   go to state 15
    statement    go to state 16
    declaration  go to state 17
    type         go to state 18
    if_else      go to state 19
    while        go to state 20
    for          go to state 21
    assignment   go to state 22
    printf       go to state 23
    scanf        go to state 24


State 1

   16 type: T_INT .

    $default  reduce using rule 16 (type)


State 2

   18 type: T_BOOL .

    $default  reduce using rule 18 (type)


State 3

   17 type: T_CHAR .

    $default  reduce using rule 17 (type)


State 4

   19 type: T_STRING .

    $default  reduce using rule 19 (type)


State 5

   20 if_else: IF . LPAREN expr RPAREN statement
   21        | IF . LPAREN expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 25


State 6

   22 while: WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 26


State 7

   23 for: FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement

    LPAREN  shift, and go to state 27


State 8

   30 printf: PRINTF . LPAREN expr RPAREN

    LPAREN  shift, and go to state 28


State 9

   31 scanf: SCANF . LPAREN expr RPAREN

    LPAREN  shift, and go to state 29


State 10

   13 statement: RETURN . expr SEMICOLON

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 39


State 11

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 12

   12 statement: LBRACE . statements RBRACE

    T_INT      shift, and go to state 1
    T_BOOL     shift, and go to state 2
    T_CHAR     shift, and go to state 3
    T_STRING   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9
    RETURN     shift, and go to state 10
    SEMICOLON  shift, and go to state 11
    LBRACE     shift, and go to state 12
    ID         shift, and go to state 13

    statements   go to state 40
    statement    go to state 16
    declaration  go to state 17
    type         go to state 18
    if_else      go to state 19
    while        go to state 20
    for          go to state 21
    assignment   go to state 22
    printf       go to state 23
    scanf        go to state 24


State 13

   24 assignment: ID . ASSIGN expr
   25           | ID . ADD_ASSI expr
   26           | ID . SUB_ASSI expr
   27           | ID . MUL_ASSI expr
   28           | ID . DIV_ASSI expr
   29           | ID . MOD_ASSI expr

    ASSIGN    shift, and go to state 41
    ADD_ASSI  shift, and go to state 42
    SUB_ASSI  shift, and go to state 43
    MUL_ASSI  shift, and go to state 44
    DIV_ASSI  shift, and go to state 45
    MOD_ASSI  shift, and go to state 46


State 14

    0 $accept: program . $end

    $end  shift, and go to state 47


State 15

    1 program: statements .
    3 statements: statements . statement

    T_INT      shift, and go to state 1
    T_BOOL     shift, and go to state 2
    T_CHAR     shift, and go to state 3
    T_STRING   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9
    RETURN     shift, and go to state 10
    SEMICOLON  shift, and go to state 11
    LBRACE     shift, and go to state 12
    ID         shift, and go to state 13

    $default  reduce using rule 1 (program)

    statement    go to state 48
    declaration  go to state 17
    type         go to state 18
    if_else      go to state 19
    while        go to state 20
    for          go to state 21
    assignment   go to state 22
    printf       go to state 23
    scanf        go to state 24


State 16

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 17

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 18

   14 declaration: type . ID ASSIGN expr
   15            | type . ID

    ID  shift, and go to state 50


State 19

    6 statement: if_else .

    $default  reduce using rule 6 (statement)


State 20

    7 statement: while .

    $default  reduce using rule 7 (statement)


State 21

    8 statement: for .

    $default  reduce using rule 8 (statement)


State 22

    9 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 23

   10 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 24

   11 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 25

   20 if_else: IF LPAREN . expr RPAREN statement
   21        | IF LPAREN . expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 54


State 26

   22 while: WHILE LPAREN . expr RPAREN statement

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 55


State 27

   23 for: FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RPAREN statement

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 56


State 28

   30 printf: PRINTF LPAREN . expr RPAREN

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 57


State 29

   31 scanf: SCANF LPAREN . expr RPAREN

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 58


State 30

   51 expr: LPAREN . expr RPAREN

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 59


State 31

   35 expr: CHAR .

    $default  reduce using rule 35 (expr)


State 32

   34 expr: INT .

    $default  reduce using rule 34 (expr)


State 33

   36 expr: STRING .

    $default  reduce using rule 36 (expr)


State 34

   32 expr: BOOL .

    $default  reduce using rule 32 (expr)


State 35

   33 expr: ID .

    $default  reduce using rule 33 (expr)


State 36

   52 expr: ADD . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 60


State 37

   53 expr: SUB . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 61


State 38

   37 expr: NOT . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 62


State 39

   13 statement: RETURN expr . SEMICOLON
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    SEMICOLON  shift, and go to state 63
    OR         shift, and go to state 64
    AND        shift, and go to state 65
    EQ         shift, and go to state 66
    NE         shift, and go to state 67
    GT         shift, and go to state 68
    LT         shift, and go to state 69
    GE         shift, and go to state 70
    LE         shift, and go to state 71
    ADD        shift, and go to state 72
    SUB        shift, and go to state 73
    MUL        shift, and go to state 74
    DIV        shift, and go to state 75
    MOD        shift, and go to state 76


State 40

    3 statements: statements . statement
   12 statement: LBRACE statements . RBRACE

    T_INT      shift, and go to state 1
    T_BOOL     shift, and go to state 2
    T_CHAR     shift, and go to state 3
    T_STRING   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9
    RETURN     shift, and go to state 10
    SEMICOLON  shift, and go to state 11
    LBRACE     shift, and go to state 12
    RBRACE     shift, and go to state 77
    ID         shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    type         go to state 18
    if_else      go to state 19
    while        go to state 20
    for          go to state 21
    assignment   go to state 22
    printf       go to state 23
    scanf        go to state 24


State 41

   24 assignment: ID ASSIGN . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 78


State 42

   25 assignment: ID ADD_ASSI . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 79


State 43

   26 assignment: ID SUB_ASSI . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 80


State 44

   27 assignment: ID MUL_ASSI . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 81


State 45

   28 assignment: ID DIV_ASSI . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 82


State 46

   29 assignment: ID MOD_ASSI . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 83


State 47

    0 $accept: program $end .

    $default  accept


State 48

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 49

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 50

   14 declaration: type ID . ASSIGN expr
   15            | type ID .

    ASSIGN  shift, and go to state 84

    $default  reduce using rule 15 (declaration)


State 51

    9 statement: assignment SEMICOLON .

    $default  reduce using rule 9 (statement)


State 52

   10 statement: printf SEMICOLON .

    $default  reduce using rule 10 (statement)


State 53

   11 statement: scanf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 54

   20 if_else: IF LPAREN expr . RPAREN statement
   21        | IF LPAREN expr . RPAREN statement ELSE statement
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    RPAREN  shift, and go to state 85
    OR      shift, and go to state 64
    AND     shift, and go to state 65
    EQ      shift, and go to state 66
    NE      shift, and go to state 67
    GT      shift, and go to state 68
    LT      shift, and go to state 69
    GE      shift, and go to state 70
    LE      shift, and go to state 71
    ADD     shift, and go to state 72
    SUB     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MOD     shift, and go to state 76


State 55

   22 while: WHILE LPAREN expr . RPAREN statement
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    RPAREN  shift, and go to state 86
    OR      shift, and go to state 64
    AND     shift, and go to state 65
    EQ      shift, and go to state 66
    NE      shift, and go to state 67
    GT      shift, and go to state 68
    LT      shift, and go to state 69
    GE      shift, and go to state 70
    LE      shift, and go to state 71
    ADD     shift, and go to state 72
    SUB     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MOD     shift, and go to state 76


State 56

   23 for: FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RPAREN statement
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    SEMICOLON  shift, and go to state 87
    OR         shift, and go to state 64
    AND        shift, and go to state 65
    EQ         shift, and go to state 66
    NE         shift, and go to state 67
    GT         shift, and go to state 68
    LT         shift, and go to state 69
    GE         shift, and go to state 70
    LE         shift, and go to state 71
    ADD        shift, and go to state 72
    SUB        shift, and go to state 73
    MUL        shift, and go to state 74
    DIV        shift, and go to state 75
    MOD        shift, and go to state 76


State 57

   30 printf: PRINTF LPAREN expr . RPAREN
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    RPAREN  shift, and go to state 88
    OR      shift, and go to state 64
    AND     shift, and go to state 65
    EQ      shift, and go to state 66
    NE      shift, and go to state 67
    GT      shift, and go to state 68
    LT      shift, and go to state 69
    GE      shift, and go to state 70
    LE      shift, and go to state 71
    ADD     shift, and go to state 72
    SUB     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MOD     shift, and go to state 76


State 58

   31 scanf: SCANF LPAREN expr . RPAREN
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    RPAREN  shift, and go to state 89
    OR      shift, and go to state 64
    AND     shift, and go to state 65
    EQ      shift, and go to state 66
    NE      shift, and go to state 67
    GT      shift, and go to state 68
    LT      shift, and go to state 69
    GE      shift, and go to state 70
    LE      shift, and go to state 71
    ADD     shift, and go to state 72
    SUB     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MOD     shift, and go to state 76


State 59

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr
   51     | LPAREN expr . RPAREN

    RPAREN  shift, and go to state 90
    OR      shift, and go to state 64
    AND     shift, and go to state 65
    EQ      shift, and go to state 66
    NE      shift, and go to state 67
    GT      shift, and go to state 68
    LT      shift, and go to state 69
    GE      shift, and go to state 70
    LE      shift, and go to state 71
    ADD     shift, and go to state 72
    SUB     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MOD     shift, and go to state 76


State 60

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr
   52     | ADD expr .

    $default  reduce using rule 52 (expr)


State 61

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr
   53     | SUB expr .

    $default  reduce using rule 53 (expr)


State 62

   37 expr: NOT expr .
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    $default  reduce using rule 37 (expr)


State 63

   13 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 13 (statement)


State 64

   50 expr: expr OR . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 91


State 65

   49 expr: expr AND . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 92


State 66

   47 expr: expr EQ . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 93


State 67

   48 expr: expr NE . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 94


State 68

   43 expr: expr GT . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 95


State 69

   44 expr: expr LT . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 96


State 70

   45 expr: expr GE . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 97


State 71

   46 expr: expr LE . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 98


State 72

   41 expr: expr ADD . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 99


State 73

   42 expr: expr SUB . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 100


State 74

   38 expr: expr MUL . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 101


State 75

   39 expr: expr DIV . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 102


State 76

   40 expr: expr MOD . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 103


State 77

   12 statement: LBRACE statements RBRACE .

    $default  reduce using rule 12 (statement)


State 78

   24 assignment: ID ASSIGN expr .
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    OR   shift, and go to state 64
    AND  shift, and go to state 65
    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 24 (assignment)


State 79

   25 assignment: ID ADD_ASSI expr .
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    OR   shift, and go to state 64
    AND  shift, and go to state 65
    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 25 (assignment)


State 80

   26 assignment: ID SUB_ASSI expr .
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    OR   shift, and go to state 64
    AND  shift, and go to state 65
    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 26 (assignment)


State 81

   27 assignment: ID MUL_ASSI expr .
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    OR   shift, and go to state 64
    AND  shift, and go to state 65
    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 27 (assignment)


State 82

   28 assignment: ID DIV_ASSI expr .
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    OR   shift, and go to state 64
    AND  shift, and go to state 65
    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 28 (assignment)


State 83

   29 assignment: ID MOD_ASSI expr .
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    OR   shift, and go to state 64
    AND  shift, and go to state 65
    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 29 (assignment)


State 84

   14 declaration: type ID ASSIGN . expr

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 104


State 85

   20 if_else: IF LPAREN expr RPAREN . statement
   21        | IF LPAREN expr RPAREN . statement ELSE statement

    T_INT      shift, and go to state 1
    T_BOOL     shift, and go to state 2
    T_CHAR     shift, and go to state 3
    T_STRING   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9
    RETURN     shift, and go to state 10
    SEMICOLON  shift, and go to state 11
    LBRACE     shift, and go to state 12
    ID         shift, and go to state 13

    statement    go to state 105
    declaration  go to state 17
    type         go to state 18
    if_else      go to state 19
    while        go to state 20
    for          go to state 21
    assignment   go to state 22
    printf       go to state 23
    scanf        go to state 24


State 86

   22 while: WHILE LPAREN expr RPAREN . statement

    T_INT      shift, and go to state 1
    T_BOOL     shift, and go to state 2
    T_CHAR     shift, and go to state 3
    T_STRING   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9
    RETURN     shift, and go to state 10
    SEMICOLON  shift, and go to state 11
    LBRACE     shift, and go to state 12
    ID         shift, and go to state 13

    statement    go to state 106
    declaration  go to state 17
    type         go to state 18
    if_else      go to state 19
    while        go to state 20
    for          go to state 21
    assignment   go to state 22
    printf       go to state 23
    scanf        go to state 24


State 87

   23 for: FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RPAREN statement

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 107


State 88

   30 printf: PRINTF LPAREN expr RPAREN .

    $default  reduce using rule 30 (printf)


State 89

   31 scanf: SCANF LPAREN expr RPAREN .

    $default  reduce using rule 31 (scanf)


State 90

   51 expr: LPAREN expr RPAREN .

    $default  reduce using rule 51 (expr)


State 91

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr
   50     | expr OR expr .

    AND  shift, and go to state 65
    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 50 (expr)


State 92

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   49     | expr AND expr .
   50     | expr . OR expr

    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 49 (expr)


State 93

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   47     | expr EQ expr .
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 47 (expr)


State 94

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   48     | expr NE expr .
   49     | expr . AND expr
   50     | expr . OR expr

    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 48 (expr)


State 95

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   43     | expr GT expr .
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 43 (expr)


State 96

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   44     | expr LT expr .
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 44 (expr)


State 97

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   45     | expr GE expr .
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 45 (expr)


State 98

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   46     | expr LE expr .
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 46 (expr)


State 99

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   41     | expr ADD expr .
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 41 (expr)


State 100

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   42     | expr SUB expr .
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 42 (expr)


State 101

   38 expr: expr . MUL expr
   38     | expr MUL expr .
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    $default  reduce using rule 38 (expr)


State 102

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   39     | expr DIV expr .
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    $default  reduce using rule 39 (expr)


State 103

   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   40     | expr MOD expr .
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    $default  reduce using rule 40 (expr)


State 104

   14 declaration: type ID ASSIGN expr .
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    OR   shift, and go to state 64
    AND  shift, and go to state 65
    EQ   shift, and go to state 66
    NE   shift, and go to state 67
    GT   shift, and go to state 68
    LT   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 14 (declaration)


State 105

   20 if_else: IF LPAREN expr RPAREN statement .
   21        | IF LPAREN expr RPAREN statement . ELSE statement

    ELSE  shift, and go to state 108

    $default  reduce using rule 20 (if_else)


State 106

   22 while: WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 22 (while)


State 107

   23 for: FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RPAREN statement
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    SEMICOLON  shift, and go to state 109
    OR         shift, and go to state 64
    AND        shift, and go to state 65
    EQ         shift, and go to state 66
    NE         shift, and go to state 67
    GT         shift, and go to state 68
    LT         shift, and go to state 69
    GE         shift, and go to state 70
    LE         shift, and go to state 71
    ADD        shift, and go to state 72
    SUB        shift, and go to state 73
    MUL        shift, and go to state 74
    DIV        shift, and go to state 75
    MOD        shift, and go to state 76


State 108

   21 if_else: IF LPAREN expr RPAREN statement ELSE . statement

    T_INT      shift, and go to state 1
    T_BOOL     shift, and go to state 2
    T_CHAR     shift, and go to state 3
    T_STRING   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9
    RETURN     shift, and go to state 10
    SEMICOLON  shift, and go to state 11
    LBRACE     shift, and go to state 12
    ID         shift, and go to state 13

    statement    go to state 110
    declaration  go to state 17
    type         go to state 18
    if_else      go to state 19
    while        go to state 20
    for          go to state 21
    assignment   go to state 22
    printf       go to state 23
    scanf        go to state 24


State 109

   23 for: FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RPAREN statement

    LPAREN  shift, and go to state 30
    CHAR    shift, and go to state 31
    INT     shift, and go to state 32
    STRING  shift, and go to state 33
    BOOL    shift, and go to state 34
    ID      shift, and go to state 35
    ADD     shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38

    expr  go to state 111


State 110

   21 if_else: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 21 (if_else)


State 111

   23 for: FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RPAREN statement
   38 expr: expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   41     | expr . ADD expr
   42     | expr . SUB expr
   43     | expr . GT expr
   44     | expr . LT expr
   45     | expr . GE expr
   46     | expr . LE expr
   47     | expr . EQ expr
   48     | expr . NE expr
   49     | expr . AND expr
   50     | expr . OR expr

    RPAREN  shift, and go to state 112
    OR      shift, and go to state 64
    AND     shift, and go to state 65
    EQ      shift, and go to state 66
    NE      shift, and go to state 67
    GT      shift, and go to state 68
    LT      shift, and go to state 69
    GE      shift, and go to state 70
    LE      shift, and go to state 71
    ADD     shift, and go to state 72
    SUB     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MOD     shift, and go to state 76


State 112

   23 for: FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN . statement

    T_INT      shift, and go to state 1
    T_BOOL     shift, and go to state 2
    T_CHAR     shift, and go to state 3
    T_STRING   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9
    RETURN     shift, and go to state 10
    SEMICOLON  shift, and go to state 11
    LBRACE     shift, and go to state 12
    ID         shift, and go to state 13

    statement    go to state 113
    declaration  go to state 17
    type         go to state 18
    if_else      go to state 19
    while        go to state 20
    for          go to state 21
    assignment   go to state 22
    printf       go to state 23
    scanf        go to state 24


State 113

   23 for: FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement .

    $default  reduce using rule 23 (for)
