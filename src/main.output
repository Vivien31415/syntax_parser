Terminals unused in grammar

   LBRACKET
   RBRACKET


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | decl SEMICOLON
    6          | expr_list SEMICOLON
    7          | funcdef
    8          | if_else
    9          | while
   10          | for
   11          | printf SEMICOLON
   12          | scanf SEMICOLON
   13          | block
   14          | RETURN expr SEMICOLON

   15 block: LBRACE statements RBRACE
   16      | LBRACE RBRACE

   17 funcdef: type ID LPAREN RPAREN block

   18 decl: vardecl

   19 vardecl: type ID
   20        | vardecl COMMA ID

   21 type: T_INT
   22     | T_CHAR
   23     | T_BOOL
   24     | T_STRING
   25     | T_VOID

   26 if_else: IF LPAREN expr_list RPAREN statement
   27        | IF LPAREN expr_list RPAREN statement ELSE statement

   28 while: WHILE LPAREN expr_list RPAREN statement

   29 for: FOR LPAREN statement statement expr_list RPAREN statement

   30 printf: PRINTF LPAREN expr_list RPAREN

   31 scanf: SCANF LPAREN expr_list RPAREN

   32 expr_list: expr
   33          | expr_list COMMA expr

   34 expr: assignment
   35     | BOOL
   36     | ID
   37     | INT
   38     | CHAR
   39     | STRING
   40     | expr MUL expr
   41     | expr DIV expr
   42     | expr MOD expr
   43     | expr ADD expr
   44     | expr SUB expr
   45     | ADD expr
   46     | SUB expr
   47     | INC expr
   48     | DEC expr
   49     | expr INC
   50     | expr DEC
   51     | expr GT expr
   52     | expr LT expr
   53     | expr GE expr
   54     | expr LE expr
   55     | expr EQ expr
   56     | expr NE expr
   57     | expr AND expr
   58     | expr OR expr
   59     | NOT expr
   60     | LPAREN expr RPAREN
   61     | ADDR ID

   62 assignment: ID ASSIGN expr
   63           | ID ADD_ASSI expr
   64           | ID SUB_ASSI expr
   65           | ID MUL_ASSI expr
   66           | ID DIV_ASSI expr
   67           | ID MOD_ASSI expr


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 21
T_VOID (259) 25
T_BOOL (260) 23
T_CHAR (261) 22
T_STRING (262) 24
IF (263) 26 27
WHILE (264) 28
FOR (265) 29
PRINTF (266) 30
SCANF (267) 31
RETURN (268) 14
SEMICOLON (269) 4 5 6 11 12 14
COMMA (270) 20 33
LPAREN (271) 17 26 27 28 29 30 31 60
RPAREN (272) 17 26 27 28 29 30 31 60
LBRACE (273) 15 16
RBRACE (274) 15 16
LBRACKET (275)
RBRACKET (276)
LOWER_THEN_ELSE (277)
ELSE (278) 27
CHAR (279) 38
INT (280) 37
STRING (281) 39
BOOL (282) 35
ID (283) 17 19 20 36 61 62 63 64 65 66 67
ASSIGN (284) 62
ADD_ASSI (285) 63
SUB_ASSI (286) 64
MUL_ASSI (287) 65
DIV_ASSI (288) 66
MOD_ASSI (289) 67
OR (290) 58
AND (291) 57
EQ (292) 55
NE (293) 56
GT (294) 51
LT (295) 52
GE (296) 53
LE (297) 54
ADD (298) 43 45
SUB (299) 44 46
MUL (300) 40
DIV (301) 41
MOD (302) 42
NOT (303) 59
INC (304) 47 49
DEC (305) 48 50
UPLUS (306)
UMINUS (307)
ADDR (308) 61
POST_INC (309)
POST_DEC (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3, on right: 1 3 15
statement (59)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3 26 27 28 29
block (60)
    on left: 15 16, on right: 13 17
funcdef (61)
    on left: 17, on right: 7
decl (62)
    on left: 18, on right: 5
vardecl (63)
    on left: 19 20, on right: 18 20
type (64)
    on left: 21 22 23 24 25, on right: 17 19
if_else (65)
    on left: 26 27, on right: 8
while (66)
    on left: 28, on right: 9
for (67)
    on left: 29, on right: 10
printf (68)
    on left: 30, on right: 11
scanf (69)
    on left: 31, on right: 12
expr_list (70)
    on left: 32 33, on right: 6 26 27 28 29 30 31 33
expr (71)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
    52 53 54 55 56 57 58 59 60 61, on right: 14 32 33 40 41 42 43 44
    45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66
    67
assignment (72)
    on left: 62 63 64 65 66 67, on right: 34


State 0

    0 $accept: . program $end

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    program     go to state 26
    statements  go to state 27
    statement   go to state 28
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 1

   21 type: T_INT .

    $default  reduce using rule 21 (type)


State 2

   25 type: T_VOID .

    $default  reduce using rule 25 (type)


State 3

   23 type: T_BOOL .

    $default  reduce using rule 23 (type)


State 4

   22 type: T_CHAR .

    $default  reduce using rule 22 (type)


State 5

   24 type: T_STRING .

    $default  reduce using rule 24 (type)


State 6

   26 if_else: IF . LPAREN expr_list RPAREN statement
   27        | IF . LPAREN expr_list RPAREN statement ELSE statement

    LPAREN  shift, and go to state 42


State 7

   28 while: WHILE . LPAREN expr_list RPAREN statement

    LPAREN  shift, and go to state 43


State 8

   29 for: FOR . LPAREN statement statement expr_list RPAREN statement

    LPAREN  shift, and go to state 44


State 9

   30 printf: PRINTF . LPAREN expr_list RPAREN

    LPAREN  shift, and go to state 45


State 10

   31 scanf: SCANF . LPAREN expr_list RPAREN

    LPAREN  shift, and go to state 46


State 11

   14 statement: RETURN . expr SEMICOLON

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 47
    assignment  go to state 41


State 12

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 13

   60 expr: LPAREN . expr RPAREN

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 48
    assignment  go to state 41


State 14

   15 block: LBRACE . statements RBRACE
   16      | LBRACE . RBRACE

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    RBRACE     shift, and go to state 49
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    statements  go to state 50
    statement   go to state 28
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 15

   38 expr: CHAR .

    $default  reduce using rule 38 (expr)


State 16

   37 expr: INT .

    $default  reduce using rule 37 (expr)


State 17

   39 expr: STRING .

    $default  reduce using rule 39 (expr)


State 18

   35 expr: BOOL .

    $default  reduce using rule 35 (expr)


State 19

   36 expr: ID .
   62 assignment: ID . ASSIGN expr
   63           | ID . ADD_ASSI expr
   64           | ID . SUB_ASSI expr
   65           | ID . MUL_ASSI expr
   66           | ID . DIV_ASSI expr
   67           | ID . MOD_ASSI expr

    ASSIGN    shift, and go to state 51
    ADD_ASSI  shift, and go to state 52
    SUB_ASSI  shift, and go to state 53
    MUL_ASSI  shift, and go to state 54
    DIV_ASSI  shift, and go to state 55
    MOD_ASSI  shift, and go to state 56

    $default  reduce using rule 36 (expr)


State 20

   45 expr: ADD . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 57
    assignment  go to state 41


State 21

   46 expr: SUB . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 58
    assignment  go to state 41


State 22

   59 expr: NOT . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 59
    assignment  go to state 41


State 23

   47 expr: INC . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 60
    assignment  go to state 41


State 24

   48 expr: DEC . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 61
    assignment  go to state 41


State 25

   61 expr: ADDR . ID

    ID  shift, and go to state 62


State 26

    0 $accept: program . $end

    $end  shift, and go to state 63


State 27

    1 program: statements .
    3 statements: statements . statement

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    $default  reduce using rule 1 (program)

    statement   go to state 64
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 28

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 29

   13 statement: block .

    $default  reduce using rule 13 (statement)


State 30

    7 statement: funcdef .

    $default  reduce using rule 7 (statement)


State 31

    5 statement: decl . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 32

   18 decl: vardecl .
   20 vardecl: vardecl . COMMA ID

    COMMA  shift, and go to state 66

    $default  reduce using rule 18 (decl)


State 33

   17 funcdef: type . ID LPAREN RPAREN block
   19 vardecl: type . ID

    ID  shift, and go to state 67


State 34

    8 statement: if_else .

    $default  reduce using rule 8 (statement)


State 35

    9 statement: while .

    $default  reduce using rule 9 (statement)


State 36

   10 statement: for .

    $default  reduce using rule 10 (statement)


State 37

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 38

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 39

    6 statement: expr_list . SEMICOLON
   33 expr_list: expr_list . COMMA expr

    SEMICOLON  shift, and go to state 70
    COMMA      shift, and go to state 71


State 40

   32 expr_list: expr .
   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    OR   shift, and go to state 72
    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 32 (expr_list)


State 41

   34 expr: assignment .

    $default  reduce using rule 34 (expr)


State 42

   26 if_else: IF LPAREN . expr_list RPAREN statement
   27        | IF LPAREN . expr_list RPAREN statement ELSE statement

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr_list   go to state 87
    expr        go to state 40
    assignment  go to state 41


State 43

   28 while: WHILE LPAREN . expr_list RPAREN statement

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr_list   go to state 88
    expr        go to state 40
    assignment  go to state 41


State 44

   29 for: FOR LPAREN . statement statement expr_list RPAREN statement

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    statement   go to state 89
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 45

   30 printf: PRINTF LPAREN . expr_list RPAREN

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr_list   go to state 90
    expr        go to state 40
    assignment  go to state 41


State 46

   31 scanf: SCANF LPAREN . expr_list RPAREN

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr_list   go to state 91
    expr        go to state 40
    assignment  go to state 41


State 47

   14 statement: RETURN expr . SEMICOLON
   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    SEMICOLON  shift, and go to state 92
    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQ         shift, and go to state 74
    NE         shift, and go to state 75
    GT         shift, and go to state 76
    LT         shift, and go to state 77
    GE         shift, and go to state 78
    LE         shift, and go to state 79
    ADD        shift, and go to state 80
    SUB        shift, and go to state 81
    MUL        shift, and go to state 82
    DIV        shift, and go to state 83
    MOD        shift, and go to state 84
    INC        shift, and go to state 85
    DEC        shift, and go to state 86


State 48

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | LPAREN expr . RPAREN

    RPAREN  shift, and go to state 93
    OR      shift, and go to state 72
    AND     shift, and go to state 73
    EQ      shift, and go to state 74
    NE      shift, and go to state 75
    GT      shift, and go to state 76
    LT      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    ADD     shift, and go to state 80
    SUB     shift, and go to state 81
    MUL     shift, and go to state 82
    DIV     shift, and go to state 83
    MOD     shift, and go to state 84
    INC     shift, and go to state 85
    DEC     shift, and go to state 86


State 49

   16 block: LBRACE RBRACE .

    $default  reduce using rule 16 (block)


State 50

    3 statements: statements . statement
   15 block: LBRACE statements . RBRACE

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    RBRACE     shift, and go to state 94
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    statement   go to state 64
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 51

   62 assignment: ID ASSIGN . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 95
    assignment  go to state 41


State 52

   63 assignment: ID ADD_ASSI . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 96
    assignment  go to state 41


State 53

   64 assignment: ID SUB_ASSI . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 97
    assignment  go to state 41


State 54

   65 assignment: ID MUL_ASSI . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 98
    assignment  go to state 41


State 55

   66 assignment: ID DIV_ASSI . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 99
    assignment  go to state 41


State 56

   67 assignment: ID MOD_ASSI . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 100
    assignment  go to state 41


State 57

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | ADD expr .
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 45 (expr)


State 58

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   46     | SUB expr .
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 46 (expr)


State 59

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | NOT expr .

    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 59 (expr)


State 60

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   47     | INC expr .
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 47 (expr)


State 61

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   48     | DEC expr .
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 48 (expr)


State 62

   61 expr: ADDR ID .

    $default  reduce using rule 61 (expr)


State 63

    0 $accept: program $end .

    $default  accept


State 64

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 65

    5 statement: decl SEMICOLON .

    $default  reduce using rule 5 (statement)


State 66

   20 vardecl: vardecl COMMA . ID

    ID  shift, and go to state 101


State 67

   17 funcdef: type ID . LPAREN RPAREN block
   19 vardecl: type ID .

    LPAREN  shift, and go to state 102

    $default  reduce using rule 19 (vardecl)


State 68

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 69

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 70

    6 statement: expr_list SEMICOLON .

    $default  reduce using rule 6 (statement)


State 71

   33 expr_list: expr_list COMMA . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 103
    assignment  go to state 41


State 72

   58 expr: expr OR . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 104
    assignment  go to state 41


State 73

   57 expr: expr AND . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 105
    assignment  go to state 41


State 74

   55 expr: expr EQ . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 106
    assignment  go to state 41


State 75

   56 expr: expr NE . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 107
    assignment  go to state 41


State 76

   51 expr: expr GT . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 108
    assignment  go to state 41


State 77

   52 expr: expr LT . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 109
    assignment  go to state 41


State 78

   53 expr: expr GE . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 110
    assignment  go to state 41


State 79

   54 expr: expr LE . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 111
    assignment  go to state 41


State 80

   43 expr: expr ADD . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 112
    assignment  go to state 41


State 81

   44 expr: expr SUB . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 113
    assignment  go to state 41


State 82

   40 expr: expr MUL . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 114
    assignment  go to state 41


State 83

   41 expr: expr DIV . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 115
    assignment  go to state 41


State 84

   42 expr: expr MOD . expr

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr        go to state 116
    assignment  go to state 41


State 85

   49 expr: expr INC .

    $default  reduce using rule 49 (expr)


State 86

   50 expr: expr DEC .

    $default  reduce using rule 50 (expr)


State 87

   26 if_else: IF LPAREN expr_list . RPAREN statement
   27        | IF LPAREN expr_list . RPAREN statement ELSE statement
   33 expr_list: expr_list . COMMA expr

    COMMA   shift, and go to state 71
    RPAREN  shift, and go to state 117


State 88

   28 while: WHILE LPAREN expr_list . RPAREN statement
   33 expr_list: expr_list . COMMA expr

    COMMA   shift, and go to state 71
    RPAREN  shift, and go to state 118


State 89

   29 for: FOR LPAREN statement . statement expr_list RPAREN statement

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    statement   go to state 119
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 90

   30 printf: PRINTF LPAREN expr_list . RPAREN
   33 expr_list: expr_list . COMMA expr

    COMMA   shift, and go to state 71
    RPAREN  shift, and go to state 120


State 91

   31 scanf: SCANF LPAREN expr_list . RPAREN
   33 expr_list: expr_list . COMMA expr

    COMMA   shift, and go to state 71
    RPAREN  shift, and go to state 121


State 92

   14 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 14 (statement)


State 93

   60 expr: LPAREN expr RPAREN .

    $default  reduce using rule 60 (expr)


State 94

   15 block: LBRACE statements RBRACE .

    $default  reduce using rule 15 (block)


State 95

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   62 assignment: ID ASSIGN expr .

    OR   shift, and go to state 72
    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 62 (assignment)


State 96

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   63 assignment: ID ADD_ASSI expr .

    OR   shift, and go to state 72
    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 63 (assignment)


State 97

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   64 assignment: ID SUB_ASSI expr .

    OR   shift, and go to state 72
    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 64 (assignment)


State 98

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   65 assignment: ID MUL_ASSI expr .

    OR   shift, and go to state 72
    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 65 (assignment)


State 99

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   66 assignment: ID DIV_ASSI expr .

    OR   shift, and go to state 72
    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 66 (assignment)


State 100

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   67 assignment: ID MOD_ASSI expr .

    OR   shift, and go to state 72
    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 67 (assignment)


State 101

   20 vardecl: vardecl COMMA ID .

    $default  reduce using rule 20 (vardecl)


State 102

   17 funcdef: type ID LPAREN . RPAREN block

    RPAREN  shift, and go to state 122


State 103

   33 expr_list: expr_list COMMA expr .
   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    OR   shift, and go to state 72
    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 33 (expr_list)


State 104

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   58     | expr OR expr .

    AND  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 58 (expr)


State 105

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   57     | expr AND expr .
   58     | expr . OR expr

    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 57 (expr)


State 106

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   55     | expr EQ expr .
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 55 (expr)


State 107

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   56     | expr NE expr .
   57     | expr . AND expr
   58     | expr . OR expr

    GT   shift, and go to state 76
    LT   shift, and go to state 77
    GE   shift, and go to state 78
    LE   shift, and go to state 79
    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 56 (expr)


State 108

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   51     | expr GT expr .
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 51 (expr)


State 109

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   52     | expr LT expr .
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 52 (expr)


State 110

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   53     | expr GE expr .
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 53 (expr)


State 111

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   54     | expr LE expr .
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 54 (expr)


State 112

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   43     | expr ADD expr .
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 43 (expr)


State 113

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   44     | expr SUB expr .
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84
    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 44 (expr)


State 114

   40 expr: expr . MUL expr
   40     | expr MUL expr .
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 40 (expr)


State 115

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   41     | expr DIV expr .
   42     | expr . MOD expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 41 (expr)


State 116

   40 expr: expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   42     | expr MOD expr .
   43     | expr . ADD expr
   44     | expr . SUB expr
   49     | expr . INC
   50     | expr . DEC
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GE expr
   54     | expr . LE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    INC  shift, and go to state 85
    DEC  shift, and go to state 86

    $default  reduce using rule 42 (expr)


State 117

   26 if_else: IF LPAREN expr_list RPAREN . statement
   27        | IF LPAREN expr_list RPAREN . statement ELSE statement

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    statement   go to state 123
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 118

   28 while: WHILE LPAREN expr_list RPAREN . statement

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    statement   go to state 124
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 119

   29 for: FOR LPAREN statement statement . expr_list RPAREN statement

    LPAREN  shift, and go to state 13
    CHAR    shift, and go to state 15
    INT     shift, and go to state 16
    STRING  shift, and go to state 17
    BOOL    shift, and go to state 18
    ID      shift, and go to state 19
    ADD     shift, and go to state 20
    SUB     shift, and go to state 21
    NOT     shift, and go to state 22
    INC     shift, and go to state 23
    DEC     shift, and go to state 24
    ADDR    shift, and go to state 25

    expr_list   go to state 125
    expr        go to state 40
    assignment  go to state 41


State 120

   30 printf: PRINTF LPAREN expr_list RPAREN .

    $default  reduce using rule 30 (printf)


State 121

   31 scanf: SCANF LPAREN expr_list RPAREN .

    $default  reduce using rule 31 (scanf)


State 122

   17 funcdef: type ID LPAREN RPAREN . block

    LBRACE  shift, and go to state 14

    block  go to state 126


State 123

   26 if_else: IF LPAREN expr_list RPAREN statement .
   27        | IF LPAREN expr_list RPAREN statement . ELSE statement

    ELSE  shift, and go to state 127

    $default  reduce using rule 26 (if_else)


State 124

   28 while: WHILE LPAREN expr_list RPAREN statement .

    $default  reduce using rule 28 (while)


State 125

   29 for: FOR LPAREN statement statement expr_list . RPAREN statement
   33 expr_list: expr_list . COMMA expr

    COMMA   shift, and go to state 71
    RPAREN  shift, and go to state 128


State 126

   17 funcdef: type ID LPAREN RPAREN block .

    $default  reduce using rule 17 (funcdef)


State 127

   27 if_else: IF LPAREN expr_list RPAREN statement ELSE . statement

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    statement   go to state 129
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 128

   29 for: FOR LPAREN statement statement expr_list RPAREN . statement

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_CHAR     shift, and go to state 4
    T_STRING   shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    FOR        shift, and go to state 8
    PRINTF     shift, and go to state 9
    SCANF      shift, and go to state 10
    RETURN     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACE     shift, and go to state 14
    CHAR       shift, and go to state 15
    INT        shift, and go to state 16
    STRING     shift, and go to state 17
    BOOL       shift, and go to state 18
    ID         shift, and go to state 19
    ADD        shift, and go to state 20
    SUB        shift, and go to state 21
    NOT        shift, and go to state 22
    INC        shift, and go to state 23
    DEC        shift, and go to state 24
    ADDR       shift, and go to state 25

    statement   go to state 130
    block       go to state 29
    funcdef     go to state 30
    decl        go to state 31
    vardecl     go to state 32
    type        go to state 33
    if_else     go to state 34
    while       go to state 35
    for         go to state 36
    printf      go to state 37
    scanf       go to state 38
    expr_list   go to state 39
    expr        go to state 40
    assignment  go to state 41


State 129

   27 if_else: IF LPAREN expr_list RPAREN statement ELSE statement .

    $default  reduce using rule 27 (if_else)


State 130

   29 for: FOR LPAREN statement statement expr_list RPAREN statement .

    $default  reduce using rule 29 (for)
